## 第一阶段：评估当前状态

1. 检查当前 MDT 使用情况
  bash
   # 查看 MDT 空间使用情况
   lfs df -h | grep MDT
   

   [ec2-user@ip-192-168-20-251 ~]$ lfs df -h | grep MDT
svc7bb4v-MDT0000_UUID      551.8G       14.0M      551.8G   1% /mnt/lustre[MDT:0]
svc7bb4v-MDT0001_UUID      549.9G       16.2G      533.7G   3% /mnt/lustre[MDT:1]


   # 查看 images 目录当前的 MDT 分配
   lfs getdirstripe /mnt/lustre/images
   
[ec2-user@ip-192-168-20-251 ~]$ lfs getdirstripe /mnt/lustre/images
lmv_stripe_count: 0 lmv_stripe_offset: 1 lmv_hash_type: none


2. 评估目录大小和文件数量
  
bash
   # 查看目录大小
   du -sh /mnt/lustre/images
   
   # 统计文件数量
   find /mnt/lustre/images -type f | wc -l
   
   # 查看子目录数量
   find /mnt/lustre/images -maxdepth 1 -type d | wc -l
   


3. 分析目录结构
  bash
   # 列出主要子目录及其大小
   du -sh /mnt/lustre/images/* | sort -hr | head -10
   

## 第二阶段：准备迁移

1. 创建临时条带化目录
  
bash
   # 创建一个跨两个 MDT 的条带化临时目录
   mkdir -p /mnt/lustre/images_balanced
   lfs setdirstripe -c 2 -i 0 /mnt/lustre/images_balanced
   
   # 验证条带化设置
   lfs getdirstripe /mnt/lustre/images_balanced
   


2. 设置默认子目录条带化策略
  bash
   # 设置默认条带化策略，使新创建的子目录在 MDT 间交替分配
   lfs setdirstripe -D -c 1 -i -1 /mnt/lustre/images_balanced
   

3. 创建备份计划（可选但强烈建议）
  
bash
   # 如果有备份系统，创建文件系统快照或备份
   # 对于 FSx，可以通过控制台或 AWS CLI 创建备份
   aws fsx create-backup --file-system-id fs-08c254e19d1ce1cf3 --tags Key=Name,Value=pre_mdt_rebalance
   


## 第三阶段：数据迁移

### 方案 A：如果 images 目录有明确的子目录结构

1. 创建子目录结构
  
bash
   # 列出所有一级子目录
   find /mnt/lustre/images -maxdepth 1 -type d | grep -v "^/mnt/lustre/images$" > /tmp/image_subdirs.txt
   
   # 为每个子目录创建条带化目录
   while read subdir; do
     dirname=$(basename "$subdir")
     mkdir -p "/mnt/lustre/images_balanced/$dirname"
     
     # 检查新创建的子目录的 MDT 分配
     echo "Directory: $dirname - MDT: $(lfs getdirstripe -i /mnt/lustre/images_balanced/$dirname)"
   done < /tmp/image_subdirs.txt
   


2. 分批迁移数据
  
bash
   # 为每个子目录迁移数据
   while read subdir; do
     dirname=$(basename "$subdir")
     echo "Migrating $dirname..."
     
     # 使用 rsync 迁移数据，保留权限和时间戳
     rsync -avP "$subdir/" "/mnt/lustre/images_balanced/$dirname/"
     
     # 验证文件数量是否一致
     src_count=$(find "$subdir" -type f | wc -l)
     dst_count=$(find "/mnt/lustre/images_balanced/$dirname" -type f | wc -l)
     echo "$dirname: Source files: $src_count, Destination files: $dst_count"
     
     # 如果文件数量一致，可以选择删除源目录中的文件以释放空间
     # rm -rf "$subdir"/*
   done < /tmp/image_subdirs.txt
   


### 方案 B：如果 images 目录下直接有大量文件

1. 创建字母分组目录
  
bash
   # 在新的条带化目录中创建字母分组目录
   for c in {a..z} {0..9}; do
     mkdir -p "/mnt/lustre/images_balanced/$c"
     echo "Directory: $c - MDT: $(lfs getdirstripe -i /mnt/lustre/images_balanced/$c)"
   done
   


2. 按文件名首字母迁移文件
  
bash
   # 对每个字母分组迁移文件
   for c in {a..z} {0..9}; do
     echo "Migrating files starting with $c..."
     find /mnt/lustre/images -maxdepth 1 -type f -name "$c*" -exec rsync -avP {} /mnt/lustre/images_balanced/$c/ \;
   done
   
   # 处理其他特殊字符开头的文件
   mkdir -p "/mnt/lustre/images_balanced/misc"
   find /mnt/lustre/images -maxdepth 1 -type f -not -name "[a-zA-Z0-9]*" -exec rsync -avP {} /mnt/lustre/images_balanced/misc/ \;
   


## 第四阶段：验证和切换

1. 验证数据完整性
  
bash
   # 比较源目录和目标目录的文件数量
   src_count=$(find /mnt/lustre/images -type f | wc -l)
   dst_count=$(find /mnt/lustre/images_balanced -type f | wc -l)
   echo "Source files: $src_count, Destination files: $dst_count"
   
   # 检查文件大小总和
   src_size=$(du -s /mnt/lustre/images | awk '{print $1}')
   dst_size=$(du -s /mnt/lustre/images_balanced | awk '{print $1}')
   echo "Source size: $src_size, Destination size: $dst_size"
   


2. 检查 MDT 平衡情况
  
bash
   # 查看 MDT 使用情况
   lfs df -h | grep MDT
   
   # 统计每个 MDT 上的文件数量（需要 root 权限）
   echo "Files on MDT0000:"
   find /mnt/lustre/images_balanced -type f -exec lfs getstripe -m {} \; | grep -c "0"
   echo "Files on MDT0001:"
   find /mnt/lustre/images_balanced -type f -exec lfs getstripe -m {} \; | grep -c "1"
   


3. 执行切换
  
bash
   # 备份原目录名称（以防需要回滚）
   mv /mnt/lustre/images /mnt/lustre/images_original
   
   # 将新的均衡目录重命名为原目录名
   mv /mnt/lustre/images_balanced /mnt/lustre/images
   
   # 验证应用程序访问
   # 此时应测试应用程序是否能正常访问新目录
   


4. 清理（确认一切正常后）
  bash
   # 在确认新目录工作正常几天后，可以删除原目录
   # rm -rf /mnt/lustre/images_original
   

## 第五阶段：持续监控和维护

1. 设置定期监控
  
bash
   # 创建一个简单的监控脚本
   cat > /usr/local/bin/monitor_mdt_balance.sh << 'EOF'
   #!/bin/bash
   echo "MDT Usage:"
   lfs df -h | grep MDT
   
   echo -e "\nFiles distribution:"
   echo "Files on MDT0000:"
   find /mnt/lustre/images -type f -exec lfs getstripe -m {} \; | grep -c "0"
   echo "Files on MDT0001:"
   find /mnt/lustre/images -type f -exec lfs getstripe -m {} \; | grep -c "1"
   EOF
   
   chmod +x /usr/local/bin/monitor_mdt_balance.sh
   


2. 为新文件设置默认条带化策略
  bash
   # 为主目录设置默认条带化策略
   lfs setdirstripe -D -c 1 -i -1 /mnt/lustre/images
   

## 注意事项和建议

1. 执行时间：
   • 迁移过程可能需要较长时间，建议在非高峰期进行
   • 对于大型目录，考虑分批次迁移

2. 性能影响：
   • 迁移过程会增加系统负载，监控系统性能
   • 考虑限制 rsync 的带宽或 I/O 优先级

3. 空间要求：
   • 确保文件系统有足够空间存储两份数据
   • 迁移完成后再删除原始数据

4. 应用程序兼容性：
   • 测试应用程序是否能正常访问条带化目录
   • 某些应用可能对文件路径有硬编码

5. 回滚计划：
   • 保留原始目录直到确认新目录工作正常
   • 记录每个步骤，以便需要时回滚

这个详细计划应该能帮助您安全地将 /mnt/lustre/images 目录在两个 MDT 之间实现数据均衡。根据您的具体环境和数据量，可能需要调整某些步骤